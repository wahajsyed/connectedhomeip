# Copyright (c) 2020 Project CHIP Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build_overrides/chip.gni")
import("//build_overrides/pigweed.gni")
import("$dir_pw_build/target_types.gni")
import("${chip_root}/build/chip/tools.gni")

assert(chip_build_tools)

#pw_sys_io_BACKEND,pw_assert_BACKEND, pw_log_BACKEND defined in args.gni
config("gnu17") {
  cflags_cc = ["-std=gnu++17"]
}

executable("chip-tool") {
  # public_configs = [ "${dir_pigweed}/pw_hdlc_lite:default_config" ]
  # cflags_cc = ["-std=c++17"]
  # cflags = [ "-Wconversion" ]
  sources = [
    "commands/common/Command.cpp",
    "commands/common/Commands.cpp",
    "commands/common/EchoCommand.cpp",
    "commands/common/Logging.cpp",
    "commands/common/ModelCommand.cpp",
    "commands/common/NetworkCommand.cpp",
    "main.cpp",
    "${dir_pigweed}/pw_hdlc_lite/rpc_example/hdlc_rpc_server.cc"
  ]

  if (is_debug) {
    defines = [ "BUILD_RELEASE=0" ]
  } else {
    defines = [ "BUILD_RELEASE=1" ]
  }
  
  public_deps = [ 
    "${chip_root}/src/lib",
    # Custom back End Impl
    "${chip_root}/examples/chip-tool/pw_sys_io:pw_sys_io_chiptool",
  ]

  deps = [
    "$dir_pw_rpc:server",
    "$dir_pw_rpc/nanopb:echo_service",
    "${dir_pigweed}/pw_hdlc_lite:pw_rpc",
    dir_pw_assert,
    dir_pw_hdlc_lite,
    dir_pw_log,
  ]
  output_dir = root_out_dir
}
